# -*- coding: utf-8 -*-
"""
Created on Tue Oct  4 20:25:06 2022

@author: loic
"""

# !/usr/bin/env python3
# Generated by the SARL compiler the Mon Oct 03 10:51:09 CEST 2022. Do not change this file.

from contribs.io.sarl.pythongenerator.api.Logging.logging import Logging
from contribs.io.sarl.pythongenerator.api.agent.agent import Agent
from multiprocessing import process
from time import sleep


class HelloAgent(Agent, object):
    """
        A "Hello World" Agent.
        @author <a href="http://www.ciad-lab.fr/author-10834/">Nicolas Gaud</a>
        @author <a href="http://www.ciad-lab.fr/author-10836/">St&eacute;phane Galland</a>
    """

    def __on_Initialize__(self, occurrence):
        """
            Print "Hello World" when spawned and wait 2 seconds to kill itself
        """

        class __Jclosure_Procedure1(object):
            def apply(self, it):
                process.terminate()

        self.getSkill(Logging).setLoggingName(u"HelloAgent")
        self.getSkill(Logging).info(u"Hello World!")
        sleep(2)
        process.terminate()

    def __on_Destroy__(self, occurrence):
        """
            Event trigger before agent dies, Print "Goodbye World" before dying
        """
        self.getSkill(Logging).info_1(u"Goodbye World!")

    def __guard_io_sarl_core_Initialize__(self, occurrence):
        it = occurrence
        __event_handles = list()
        __event_handles.append(self.__on_Initialize__)
        return __event_handles

    def __guard_io_sarl_core_Destroy__(self, occurrence):
        it = occurrence
        __event_handles_1 = list()
        __event_handles_1.append(self.__on_Destroy__)
        return __event_handles_1

    def __init__(self):
        pass