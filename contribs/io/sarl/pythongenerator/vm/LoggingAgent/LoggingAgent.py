#!/usr/bin/env python3
# Generated by the SARL compiler the Thu Oct 13 19:57:43 CEST 2022. Do not change this file.

#### GENERATED PYTHON CODE

# from io.sarl.lang.core import Agent
#
# class BootAgent(Agent,object):
# 	def __on_Initialize__(self, occurrence):
# 		s = ConsoleLogging()
# 		self.setSkill(s)
# 		s.info(u"Hello World !")
# 	def __guard_io_sarl_core_Initialize__(self, occurrence):
# 		it = occurrence
# 		__event_handles = list
# 		__event_handles.add(__on_Initialize__)
# 		return __event_handles
# 	def __init__(self):
# 		pass


#### GENERATES PYTHON CODE WITH NECESSARY MODIFICATION

from pysarl.io.sarl.lang.core.Agent import Agent
from pysarl.io.sarl.core.Logging import Logging
from vm.builtin.skill.LoggingSkill import LoggingSkill
from vm.LoggingAgent.SecondAgent import SecondAgent
from pysarl.io.sarl.core.Lifecycle import Lifecycle
from vm.builtin.service.Context import Context


class LoggingAgent(Agent, object):

    def __on_Initialize__(self, occurrence):
        # s = LoggingSkill()
        # self.setSkill(s)
        self.getSkill(Logging).info(u"Hello World INFO from LogginAgent!")
        # self.getSkill(Logging).debug(u"Hello World DEBUG from LogginAgent!")
        # self.getSkill(Lifecycle).spawn(SecondAgent)
        # print(self.hasSkill(Logging))
        # self.clearSkill(Logging)
        # print(self.hasSkill(Logging))

    def __guard_io_sarl_core_Initialize__(self, occurrence):
        it = occurrence
        __event_handles = list()
        __event_handles.append(self.__on_Initialize__)
        return __event_handles

    def __init__(self, parentID, agentID, context: Context, dynamicSkillProvider = None):
        super().__init__(parentID, agentID, context, dynamicSkillProvider)