#!/usr/bin/env python3
# Generated by the SARL compiler the Thu Oct 13 11:30:30 CEST 2022. Do not change this file.

from io.sarl.core import OpenEventSpace
from io.sarl.lang.core import Address
from io.sarl.lang.core import Event

class pingSkill(,object):
	def sendping(self) -> :
		if (self.spc.getNumberOfStrongParticipants() > 1):
			e = PingEvent(0)
			.println(u"Sending ping event")
			self.spc.emit(self.getID(), e)
		else:
			.println(u"I am alone in this space")
	def replyPing(self, occ : Event) -> :
		class __Jclosure_(Address)=>boolean((Address)=>bool,object):
			def matches(self, it):
				(it == occ.getSource())
		if (self.spc.getNumberOfStrongParticipants() > 1):
			e = PingEvent(0)
			.println(u"Replying with ping event")
			self.spc.emit(self.getID(), e, __Jclosure_(Address)=>boolean())
		else:
			.println(u"I am alone in this space")
	def __init__(self, pingSpace : OpenEventSpace) -> :
		(self.spc = pingSpace)