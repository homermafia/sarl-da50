#!/usr/bin/env python3
# Generated by the SARL compiler the Sun Oct 23 22:44:06 CEST 2022. Do not change this file.

from Pong import Pong
from io.sarl.core import DefaultContextInteractions
from io.sarl.lang.core import Agent


class PongAgent(Agent, object):
    def __on_Initialize__(self, occurrence):
        print(u"Waiting for Ping")
        self.count = 0

    def sendPong(self) -> object:
        class __Jclosure_Procedure1(object):
            def apply(self, it):
                self.sendPong()

        if self.getSkill(DefaultContextInteractions).getDefaultSpace().isPseudoEmpty(self.getID()):
            return self._in(2000, __Jclosure_Procedure1())
        else:
            print(u"Send Ping")
            self.getSkill(DefaultContextInteractions).emit(Pong(self.count))
            self.count += 1

    def __on_Ping__(self, occurrence):
        class __Jclosure_Procedure1(object):
            def apply(self, it):
                self.sendPong()

        print(u"Ping catch")
        self._in(1000, __Jclosure_Procedure1())

    def __guard_io_sarl_core_Initialize__(self, occurrence):
        it = occurrence
        __event_handles = list()
        __event_handles.append(self.__on_Initialize__)
        return __event_handles

    def __guard_fr_utbm_pingpong_Ping__(self, occurrence):
        it = occurrence
        __event_handles_1 = list()
        __event_handles_1.append(self.__on_Ping__)
        return __event_handles_1

    def __init__(self):
        self.count = 0
