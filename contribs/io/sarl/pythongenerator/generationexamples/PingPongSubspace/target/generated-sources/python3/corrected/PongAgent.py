#!/usr/bin/env python3
# Generated by the SARL compiler the Sun Oct 23 23:37:01 CEST 2022. Do not change this file.

from io.sarl.core import OpenEventSpaceSpecification
from io.sarl.lang.core import Address
from io.sarl.lang.core import Agent

from PongEvent import PongEvent

import uuid


class PongAgent(Agent, object):
    def __on_Initialize__(self, occurrence):
        self.spc = self.getDefaultContext().getOrCreateSpaceWithSpec(OpenEventSpaceSpecification,
                                                                     uuid.UUID(str(occurrence.parameters[1])))
        self.spc.registerStrongParticipant(self.asEventListener())

    def __on_PingEvent__(self, occurrence):
        class __Jclosure_(Address):
            def matches(self, it):
                return it == occurrence.getSource()

        print(u"Received ping event")
        if occurrence.index == 0:
            e = PongEvent(occurrence.index)
            self.emit(self.spc, e, __Jclosure_(Address))

    def __guard_io_sarl_core_Initialize__(self, occurrence):
        it = occurrence
        __event_handles = list()
        __event_handles.append(self.__on_Initialize__)
        return __event_handles

    def __guard_PingEvent__(self, occurrence):
        it = occurrence
        __event_handles_1 = list()
        __event_handles_1.append(self.__on_PingEvent__)
        return __event_handles_1

    def __init__(self):
        self.spc = None
